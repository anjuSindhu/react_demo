{"version":3,"sources":["components/Chart.js","HOC/stylesWrapper.js","components/Todo.js","components/RestApiComp.js","commonStyles.js","components/Button1.js","components/JsxElements.js","components/clock.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartData","react_default","a","createElement","className","es","data","options","title","display","displayTitle","text","location","fontSize","legend","position","legendPosition","Component","defaultProps","displayLegend","WrappedComponent","Todo","handleChange","e","setState","target","value","handleSubmit","preventDefault","length","newItem","id","Date","now","items","concat","style","margin","Todo_TodoList","onSubmit","htmlFor","onChange","React","TodoList","map","item","key","RestApiComp","isLoaded","_this2","fetch","then","res","json","_this$state","name","buttonStyles","default","backgroundColor","color","padding","disable","stylesWrapper","buttonRef","toggleColor","styles","ref","button","onClick","console","log","args","_styles","objectSpread","translateProps","JsxElements","toUpperCase","alert","user","firstName","lastNAme","type","Clock","readTime","_time","timeFromClock","innerHTML","replace","document","getElementById","date","setInterval","tick","clearInterval","timerID","_this3","h2","toLocaleTimeString","App","charData","getChartData","labels","datasets","label","borderWidth","borderColor","hoverBorderWidth","src","logo","alt","components_Chart","components_Todo","components_Button1","components_RestApiComp","clock","components_JsxElements","Boolean","window","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ddc84c67.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Bar , Line, Pie } from 'react-chartjs-2';\r\n\r\nclass Chart extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            chartData: props.chartData\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend: true,\r\n        legendPosition:'right',\r\n        location: 'Switzerland'\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='row'>\r\n            <div className='col-1-of-3'>\r\n            <Bar \r\n                data={this.state.chartData}\r\n                options={{\r\n                    title:{\r\n                    display: this.props.displayTitle,\r\n                    text:'Big Cities of ' + this.props.location,\r\n                    fontSize: 25\r\n                },\r\n                legend:{\r\n                    position:this.props.legendPosition\r\n                }}}    \r\n            />\r\n            </div>\r\n            <div className='col-1-of-3'>\r\n            <Line\r\n                data={this.state.chartData}\r\n                options={{\r\n                    title:{\r\n                    display: this.props.displayTitle,\r\n                    text:'Big Cities of ' + this.props.location,\r\n                    fontSize: 25\r\n                },\r\n                legend:{\r\n                    position:this.props.legendPosition\r\n                }}}    \r\n            />\r\n            </div>\r\n            <div className='col-1-of-3'>\r\n            <Pie\r\n                data={this.state.chartData}\r\n                options={{\r\n                    title:{\r\n                    display: this.props.displayTitle,\r\n                    text:'Big Cities of ' + this.props.location,\r\n                    fontSize: 25\r\n                },\r\n                legend:{\r\n                    position:this.props.legendPosition\r\n                }}}    \r\n            />\r\n            </div>\r\n            </div>\r\n         )\r\n    }\r\n}\r\nexport default Chart;","import buttonStyles from './../commonStyles';\r\n\r\nconst translateProps = (props) => {\r\n    let _styles = {...buttonStyles.default};\r\n    if(props.disable){\r\n        _styles = {..._styles, ...buttonStyles.disable}\r\n    }\r\n    const newProps = {...props, styles:_styles}\r\n    return newProps;\r\n}\r\n\r\nexport default (WrappedComponent) => {\r\n    return function wrappedRender(args){\r\n        return WrappedComponent(translateProps(args))\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Todo extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { items: [], text: '' };\r\n      //this.handleChange = this.handleChange.bind(this);\r\n      //this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div style={{margin:20}}>\r\n          <h3>TODOs List</h3>\r\n          <TodoList items={this.state.items} />\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label htmlFor=\"new-todo\">\r\n              What needs to be done?\r\n            </label><br/>\r\n            <input\r\n              id=\"new-todo\"\r\n              onChange={this.handleChange}\r\n              value={this.state.text}\r\n            />\r\n            <button>\r\n              Add #{this.state.items.length + 1}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    handleChange = (e) => {\r\n      this.setState({ text: e.target.value });\r\n    };\r\n  \r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (!this.state.text.length) {\r\n        return;\r\n      }\r\n      const newItem = {\r\n        text: this.state.text,\r\n        id: Date.now()\r\n      };\r\n      this.setState(state => ({\r\n        items: state.items.concat(newItem),\r\n        text: ''\r\n      }));\r\n    }\r\n  }\r\n  \r\n  const TodoList = (props) => {\r\n    \r\n    return (\r\n      <ul>\r\n        {props.items.map(item => (\r\n          <li key={item.id}>{item.text}</li>\r\n        ))}\r\n      </ul>\r\n    );\r\n}\r\n  \r\n  export default Todo;","import React, { Component } from 'react';\r\n\r\nclass RestApiComp extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          items: [],\r\n          isLoaded: false,\r\n      }\r\n    }\r\n\r\n    componentDidMount (){\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => res.json())\r\n        .then(json=> {\r\n          this.setState({\r\n            isLoaded:true,\r\n            items: json,\r\n          })\r\n        })\r\n    }\r\n  \r\n    render() {\r\n      var {isLoaded, items} = this.state;\r\n      if(!isLoaded){\r\n          return <div>Loading....</div>\r\n      }\r\n      else{\r\n        return (\r\n            <div>\r\n            <h3> REST Data</h3>\r\n            <ul>\r\n                {items.map(item => (<li key={item.id}>{item.name}</li>))}\r\n            </ul>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n  \r\n\r\n  }\r\n\r\n  \r\n  export default RestApiComp;","const buttonStyles = {\r\n    default:{\r\n        backgroundColor: '#737373',\r\n        color: '#eae8e8',\r\n        margin: '10px',\r\n        padding: '10px'\r\n    },\r\n    disable:{\r\n        backgroundColor: 'red',\r\n        color:'#c7c6c6',\r\n    }\r\n}\r\nexport default buttonStyles;","import React from 'react';\r\nimport stylesWrapper from './../HOC/stylesWrapper';\r\n\r\nconst Button1 = (props) => {\r\n    let buttonRef = null;\r\n    let toggleColor = false;\r\n    const buttonClick = () => {\r\n        console.log(\"clicked\" + buttonRef.style.color);\r\n        if(!toggleColor){\r\n            buttonRef.style.backgroundColor = 'green';\r\n            toggleColor = true;\r\n        }else{\r\n            buttonRef.style.backgroundColor = 'red';\r\n            toggleColor = false;\r\n        }\r\n    }\r\n     return(\r\n        <button style={props.styles} ref={(button) =>{buttonRef = button}} onClick={buttonClick}>I am a Button 1.</button>\r\n    )\r\n}\r\nexport default stylesWrapper(Button1);","import React from 'react';\r\n\r\nclass JsxElements extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            user : {\r\n            firstName: 'Anju',\r\n            lastNAme: 'Sindhu'\r\n        },\r\n        value: '',\r\n    }\r\n    }\r\n    componentDidMount (){\r\n        \r\n    }\r\n    \r\n    handleChange = (e) =>{\r\n        this.setState({value: e.target.value.toUpperCase()});\r\n        console.log(\"val\" + this.state.value);\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        alert('Your favorite flavor is: ' + this.state.value);\r\n        return false;\r\n    }\r\n\r\n    render(){return (\r\n        <div>\r\n            <h1>Hello, {this.state.user.firstName + ' ' +this.state.user.lastNAme}. </h1>\r\n            <form onSubmit={this.handleSubmit} >\r\n            <label>\r\n            Pick your favorite flavor:\r\n            <select value={this.state.value} onChange={this.handleChange}>\r\n                <option value=\"grapefruit\">Grapefruit</option>\r\n                <option value=\"lime\">Lime</option>\r\n                <option value=\"coconut\">Coconut</option>\r\n                <option value=\"mango\">Mango</option>\r\n            </select>\r\n            </label>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default JsxElements;","import React from 'react';\r\nclass Clock extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {date: new Date()};\r\n    }\r\n\r\n    componentDidMount(){\r\n        setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({date: new Date()});\r\n    }\r\n\r\n    readTime = () => {\r\n      var _time = this.timeFromClock.innerHTML.replace('Current time is', '');\r\n      document.getElementById('timeRead').innerHTML = _time;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h1>Clock Component !!</h1>\r\n          <h2 ref={(h2) =>{this.timeFromClock = h2}}><pre>  Current time is {this.state.date.toLocaleTimeString()}.</pre></h2>\r\n          <button onClick={this.readTime}>Time read using React Refs</button><span id='timeRead'><pre>  Time read using React Refs:  </pre></span>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Clock;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Chart from './components/Chart';\nimport Todo from './components/Todo';\nimport RestApiComp from './components/RestApiComp';\nimport Button1 from './components/Button1';\nimport JsxElements from './components/JsxElements';\nimport Clock from './components/clock';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state= {\n      charData:{}\n    }\n  }\n\n  componentWillMount(){\n    this.getChartData();\n  }\n\n  getChartData(){\n    // either make ajax call here\n    this.setState({\n      chartData:{\n          labels:['Zurich', 'Basel', 'Geneva', 'Baden'],\n          datasets:[\n              {\n                  label:'Population',\n                  data:[\n                      617394,\n                      288749,\n                      762894,\n                      143629\n                  ],\n                  backgroundColor: [\n                      'light green',\n                      'pink',\n                      'yellow',\n                      'blue',\n                  ],\n                  borderWidth:1,\n                  borderColor: 'black',\n                  hoverBorderWidth:3,\n              }\n          ]\n      }\n    })\n  }\n  render(){\n    return (\n      <div>\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h3>Welcome to Charts</h3>\n        </div>\n        <Chart chartData={this.state.chartData} location='Swiss' legendPosition='bottom  '/>\n        <div className=\"row\">\n          <div className=\"col-1-of-2 \">\n            <h3 className=\"App-header\">To Do Component</h3>\n            <Todo/>\n          </div>\n          <div className=\"col-1-of-2 \">\n            <h3 className=\"App-header\">High Order Components</h3>\n            <Button1 disable={false}/>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-1-of-2\">\n            <h3 className=\"App-header\">Fetching Data from REST API</h3>\n            <RestApiComp/>\n          </div>\n          <div className=\"col-1-of-2 \">\n            <h3 className=\"App-header\">Clock and other JSX elements </h3>\n            <Clock/>\n            <JsxElements/>\n          </div>\n        </div>\n        \n        \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}